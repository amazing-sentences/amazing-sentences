FROM alpine:3.17.0

LABEL maintainer="Jorge Juan RodrÃ­guez Manzano"

WORKDIR /var/www/html

ARG NODE_ENV=testing

ENV DEBIAN_FRONTEND noninteractive
ENV TZ=UTC
ENV APP_ENV=testing
ENV NODE_ENV $NODE_ENV

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apk update \
    && apk add  bash curl ca-certificates zip unzip git supervisor libcap libpng-dev \
    && apk add  php81-cli \
                php81-dev \
                php81-gd \
                php81-curl \
                php81-imap \
                php81-mbstring \
                php81-xml \
                php81-zip \
                php81-bcmath \
                php81-soap \
                php81-intl \
                php81-ldap \
                php81-xdebug \
                # Alpine additional extensions
                php81-phar \
                php81-tokenizer \
                php81-dom \
                php81-fileinfo \
                php81-simplexml \
                php81-xmlwriter \
                php81-posix \
                php81-pdo \
                # Extensions under pecl namespace (different from Ubuntu)
                php81-pecl-msgpack \
                php81-pecl-igbinary \
                # Custom Sail choices
                php81-pecl-swoole \
                php81-pgsql \
                php81-pdo_pgsql \
                php81-redis \
    && php -r "readfile('https://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/ --filename=composer \
    && apk add nodejs npm \
    && npm install -g npm \
    && apk add yarn \
    && apk add postgresql-client \
    && rm -rf /tmp/* /var/cache/apk/*

RUN setcap "cap_net_bind_service=+ep" /usr/bin/php81

# Container startup requirements
COPY docker/8.1/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/8.1/php.ini /etc/php81/conf.d/99-sail.ini

COPY docker/8.1/start-container.testing /usr/local/bin/start-container.testing
RUN chmod +x /usr/local/bin/start-container.testing

RUN adduser --gecos "Sail" --ingroup www-data --disabled-password --shell /bin/bash --uid 1337 sail

RUN mkdir -p /var/log/supervisor && chmod -R o+rw /var/log/supervisor
RUN mkdir -p /var/run && chmod -R o+rw /var/run
RUN mkdir /.composer && chmod -R ugo+rw /.composer
# End of Container startup requirements

# Laravel project files are made available to Sail local containers using a
# volume that places the project root contents into /var/www/html.
# This Dockerfile is intended to be run on a CI pipeline, so contents need
# to be manually copied over.
COPY composer.json composer.lock artisan ./
COPY package.json package-lock.json ./

COPY app app/
COPY bootstrap bootstrap/
COPY config config/
COPY database database/
COPY lang lang/
COPY public public/
COPY resources resources/
COPY routes routes/
COPY storage storage/
COPY tests tests/
COPY vite.config.js .env.testing phpunit.xml ./

RUN chown -R sail:www-data /var/www/html
# End of manual copy for Laravel project files.

# Dependencies
USER sail
RUN composer install --no-progress --no-interaction
RUN npm ci

EXPOSE 8000

ENTRYPOINT ["start-container.testing"]
